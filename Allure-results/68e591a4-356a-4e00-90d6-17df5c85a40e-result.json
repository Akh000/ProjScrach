{"name": "test_login_002", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[normalize-space()='Logout']\"}\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00B7A813+48355]\n\t(No symbol) [0x00B0C4B1]\n\t(No symbol) [0x00A15358]\n\t(No symbol) [0x00A409A5]\n\t(No symbol) [0x00A40B3B]\n\t(No symbol) [0x00A6E232]\n\t(No symbol) [0x00A5A784]\n\t(No symbol) [0x00A6C922]\n\t(No symbol) [0x00A5A536]\n\t(No symbol) [0x00A382DC]\n\t(No symbol) [0x00A393DD]\n\tGetHandleVerifier [0x00DDAABD+2539405]\n\tGetHandleVerifier [0x00E1A78F+2800735]\n\tGetHandleVerifier [0x00E1456C+2775612]\n\tGetHandleVerifier [0x00C051E0+616112]\n\t(No symbol) [0x00B15F8C]\n\t(No symbol) [0x00B12328]\n\t(No symbol) [0x00B1240B]\n\t(No symbol) [0x00B04FF7]\n\tBaseThreadInitThunk [0x767BFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77357A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77357A6E+238]", "trace": "self = <test_cases.test_login.Test_Login_001 object at 0x000001E88E72B010>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b07f1576224ebe91573f3cd34cee92b8\")>\n\n    def test_login_002(self, browser):\n        self.log.info(\"Testcase test_login_002 is started\")\n        self.log.info(\"Opening browser\")\n        self.driver = browser\n        self.lp = OrangeHRM_Login(self.driver)\n        self.log.info(\"Entering Username\")\n        self.lp.enter_username(\"Admin\")\n        self.log.info(\"Entering password\")\n        self.lp.enter_password(\"admin123\")\n        self.log.info(\"Clicking in login button\")\n        self.lp.Login_Button()\n        self.log.info(\"Checking Dashboard Logo\")\n        if self.lp.Dashboard_logo() == True:\n            self.log.info(\"taking screenshot\")\n            self.driver.save_screenshot(\"E:\\\\Software Testing Class Notes\\\\Python\\\\Scrach To \"\n                                        \"Best\\\\Screenshot\\\\test_login_002(Pass).png\")\n            self.log.info(\"Clicking on Menu button\")\n            self.lp.logout_menu()\n            self.log.info(\"Clicking on logout button\")\n>           self.lp.logout()\n\ntest_login.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pageObjects\\LoginObject.py:33: in logout\n    self.driver.find_element(*OrangeHRM_Login.logout_button_xpath)\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1153: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:400: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E88E770210>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77357A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77357A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[normalize-space()='Logout']\"}\nE         (Session info: chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00B7A813+48355]\nE       \t(No symbol) [0x00B0C4B1]\nE       \t(No symbol) [0x00A15358]\nE       \t(No symbol) [0x00A409A5]\nE       \t(No symbol) [0x00A40B3B]\nE       \t(No symbol) [0x00A6E232]\nE       \t(No symbol) [0x00A5A784]\nE       \t(No symbol) [0x00A6C922]\nE       \t(No symbol) [0x00A5A536]\nE       \t(No symbol) [0x00A382DC]\nE       \t(No symbol) [0x00A393DD]\nE       \tGetHandleVerifier [0x00DDAABD+2539405]\nE       \tGetHandleVerifier [0x00E1A78F+2800735]\nE       \tGetHandleVerifier [0x00E1456C+2775612]\nE       \tGetHandleVerifier [0x00C051E0+616112]\nE       \t(No symbol) [0x00B15F8C]\nE       \t(No symbol) [0x00B12328]\nE       \t(No symbol) [0x00B1240B]\nE       \t(No symbol) [0x00B04FF7]\nE       \tBaseThreadInitThunk [0x767BFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77357A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77357A6E+238]\n\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:236: NoSuchElementException"}, "attachments": [{"name": "log", "source": "97fdfadc-be3f-4c36-9608-1698c764f4c1-attachment.txt", "type": "text/plain"}], "start": 1691732051055, "stop": 1691732068263, "uuid": "1bf7ae71-e0ab-43c9-8fe9-24aab2a34e28", "historyId": "91bc5782f896dad4a87d21d94ee8aa11", "testCaseId": "91bc5782f896dad4a87d21d94ee8aa11", "fullName": "test_login.Test_Login_001#test_login_002", "labels": [{"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_Login_001"}, {"name": "host", "value": "Akhil-PC"}, {"name": "thread", "value": "6396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}